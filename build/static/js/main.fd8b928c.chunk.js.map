{"version":3,"sources":["components/Movie.js","components/MovieList.js","components/Navbar.js","serviceWorker.js","index.js"],"names":["Movie","scope","this","props","offer","id","name","directedBy","country","value","budget","salary","Date","releaseDate","year","month","day","views","React","Component","MovieList","state","json","fetch","then","response","data","setState","drawChart","show","detalle","showDetail","detail","canvas","d3","refs","margin","iwidth","iheight","svg","append","attr","g","y","domain","range","x","map","d","padding","selectAll","enter","style","bandwidth","classed","call","console","log","className","children","msg","e","i","key","ref","marginTop","Navbar","alignItems","background","src","alt","width","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","messages","messages_es","messages_en","language","split","ReactDOM","render","locale","marginLeft","marginRight","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fd8b928c.chunk.js","sourcesContent":["import React from \"react\";\nimport { FormattedDate, FormattedNumber, FormattedPlural } from \"react-intl\";\n\nexport default class Movie extends React.Component {\n\n  \n  render() {\n    return (\n      <tr>\n        <th scope=\"row\">{this.props.offer.id}</th>\n        <td>{this.props.offer.name}</td>\n        <td>{this.props.offer.directedBy}</td>\n        <td>{this.props.offer.country}</td>\n        <td>\n          <FormattedNumber value={this.props.offer.budget} \t /> {' '}\n          <FormattedPlural \n            value={this.props.offer.salary} \n        />\n        </td>\n        <td>\n          <FormattedDate\n            value={new Date(this.props.offer.releaseDate)}\n            year=\"numeric\"\n            month=\"long\"\n            day=\"numeric\"\n          />\n        </td>\n        <td>\n          <FormattedNumber value={this.props.offer.views} />\n        </td>\n      </tr>\n    );\n  }\n}\n","import React from 'react';\nimport Movie from \"./Movie\";\nimport { FormattedMessage } from 'react-intl';\nimport * as d3 from \"d3\";\nexport default class MovieList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      json: []\n      \n    };\n  }\n\n  componentDidMount() {\n    \n    fetch(\"https://gist.githubusercontent.com/josejbocanegra/f784b189117d214578ac2358eb0a01d7/raw/2b22960c3f203bdf4fac44cc7e3849689218b8c0/data-es.json\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ json: data });\n        this.drawChart(data)\n      });\n\n  \n  }\n  showDetail(show,detalle) {\n    this.setState({ showDetail : show,detail:detalle} );\n  }\n\n  drawChart(data) {\n\n    const canvas = d3.select(this.refs.canvas);\n    \n    const width = 700;\n    const height = 500;\n    const margin = { top:10, left:50, bottom: 40, right: 10};\n    const iwidth = width - margin.left - margin.right;\n    const iheight = height - margin.top -margin.bottom;\n\n    const svg = canvas.append(\"svg\");\n    svg.attr(\"width\", width);\n    svg.attr(\"height\", height);\n    \n    let g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    \n    const y = d3.scaleLinear() \n        .domain([0, 10000000])\n        .range([iheight, 0]);\n    \n    const x = d3.scaleBand()\n    .domain(data.map(d => d.name) ) \n    .range([0, iwidth])\n    .padding(0.1);\n\n    const bars = g.selectAll(\"rect\").data(data);\n\n    bars.enter().append(\"rect\")\n    .attr(\"class\", \"bar\")\n    .style(\"fill\", \"steelblue\")\n    .attr(\"x\", d => x(d.name))\n    .attr(\"y\", d => y(d.views))\n    .attr(\"height\", d => iheight - y(d.views))\n    .attr(\"width\", x.bandwidth())  \n\n    g.append(\"g\")\n    .classed(\"x--axis\", true)\n    .call(d3.axisBottom(x))\n    .attr(\"transform\", `translate(0, ${iheight})`);  \n\n    g.append(\"g\")\n    .classed(\"y--axis\", true)\n    .call(d3.axisLeft(y));\n    \n    }\n  \n  render() {\n    console.log(this.state.json);\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n          <table className=\"table\">\n          <FormattedMessage id='BackgroundTableHeader' children={msg =>\n            <thead className={msg}>\n              <tr>\n                <th scope=\"col\"><FormattedMessage id=\"#\" /></th>\n                <th scope=\"col\"> <FormattedMessage id=\"Name\" /></th>\n                <th scope=\"col\"> <FormattedMessage id=\"Director\" /></th>\n                <th scope=\"col\"> <FormattedMessage id=\"Country\" /></th>\n                <th scope=\"col\"> <FormattedMessage id=\"Budget\" /></th>\n                <th scope=\"col\"> <FormattedMessage id=\"Release\" /></th>\n                <th scope=\"col\"> <FormattedMessage id=\"Views\" /></th>\n              </tr>\n            </thead>\n          } />\n          <tbody>\n            {this.state.json.map((e, i) => <Movie key={i} offer={e} />)}\n          </tbody>\n        </table>\n        \n        <div ref=\"canvas\" style={{marginTop:\"7rem\"}}></div> \n          </div>\n          \n        </div>\n        \n      </div>\n    );\n  }\n}"," \nimport React from 'react';\n;\n\nexport default class Navbar extends React.Component {\n  \n  /**\n   * Render del modulo.\n   */\n  render() {\n    return (\n      <nav style={{ alignItems: \"center\", background: '#00a1b5' }} className=\"navbar navbar-expamd-md navbar-light sticky-top \">\n        <div className=\"container-fluid\">\n          \n            <div className=\"navbar-brand\" ><img src=\"https://i.imgur.com/R6oOTOn.png\" alt=\"logo\" style={{ width: '40%' }} /> </div>\n        \n        </div>\n      </nav>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {IntlProvider} from 'react-intl';\n\nimport MovieList from \"./components/MovieList\";\nimport Navbar from \"./components/Navbar\";\nimport messages_es from \"./locales/es.json\";\nimport messages_en from \"./locales/en.json\";\n\nimport * as serviceWorker from './serviceWorker';\n\nconst messages = {\n    'es': messages_es,\n    'en': messages_en\n};\nconst language = navigator.language.split(/[-_]/)[0];\nconsole.log(language);\nReactDOM.render(\n\t<IntlProvider locale={language} json={messages[language]}>\n\t\t<Navbar/>\n\t\t<div style={{marginLeft:\"15rem\",marginRight:\"15rem\", marginTop:\"5rem\"}}>\n\t\t<MovieList/>\n\t\t</div>\t\n\t</IntlProvider>, \n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.register();"],"sourceRoot":""}